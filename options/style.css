@font-face {
	font-family: -apple-system, BlinkMacSystemFont, sans-serif;
	src: url(https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap);
}
@font-face {
  font-family: "San Francisco";
  font-weight: 400;
  src: url("https://applesocial.s3.amazonaws.com/assets/styles/fonts/sanfrancisco/sanfranciscodisplay-regular-webfont.woff");
}


@media (prefers-color-scheme: dark){
	:root {
		--main-bg: rgba(19, 19, 19, 1);
		--main-bg-semi: rgba(19, 19, 19, 0.4);
		--main-bg-semi2: rgba(19, 19, 19, 0.8);
		--main-bg-group: rgba(19, 19, 19, 1);
		--secondary-bg: rgba(28, 28, 30, 1);
		--secondary-bg-group: rgba(28, 28, 30, 1);
		--main-label: rgba(255, 255, 255, 1);
		--secondary-label: rgba(235, 235, 245, 0.6);
		--separator: rgba(235, 235, 245, 0.08);
		--fill-grey-1: rgba(118, 118, 128, 0.12);
		--fill-grey-2: rgba(71, 71, 76, 0.35);
		--fill-grey-3:  rgb(98 98 106 / 43%);;
		--green: rgba(50, 215, 75, 1);
		--blue: rgba(10, 132, 255, 1);
		--red: rgba(255, 69, 58, 1);
		--orange: rgba(255, 159, 10, 1);
		--indigo: rgba(94, 92, 230, 1);
		--grey-1: rgba(242, 242, 247 , 1);
		--hide-dark: none;
		--hide-light: block;
	}
}
@media (prefers-color-scheme: light) {
	:root {
		--main-bg: rgba(255, 255, 255, 1);
		--main-bg-semi: rgba(255, 255, 255, 0.4);
		--main-bg-semi2: rgba(255, 255, 255, 0.8);
		--main-bg-group: rgba(242, 242, 247 , 1);
		--secondary-bg: rgba(242, 242, 247 , 1);
		--secondary-bg-group: rgba(255, 255, 255 , 1);
		--main-label: rgba(0, 0, 0, 1);
		--secondary-label: rgba(60, 60, 67, 0.6);
		--separator: rgba(60, 60, 67, 0.08);
		--fill-grey-1: rgba(118, 118, 128, 0.12);
		--fill-grey-2:  rgb(127, 127, 148, 0.35);
		--fill-grey-3:  rgb(255 255 255 / 100%);;
		--green: rgba(52, 199, 89, 1);
		--blue: rgba(0, 122, 255, 1);
		--red: rgba(255, 59, 48, 1);
		--orange: rgba(255, 149, 0, 1);
		--indigo: rgba(88, 86, 214, 1);
		--grey-1: rgba(28, 28, 30, 1);
		--hide-dark: block;
		--hide-light: none;
	}
}



.hide-dark {
	display: var(--hide-dark);
}
.hide-light {
	display: var(--hide-light);
}





/*------------------------------
					COLORS
------------------------------*/
.green {
	--color: var(--green);
	--colorText: white;
}
.blue {
	--color: var(--blue);
	--colorText: white;
}
.red {
	--color: var(--red);
	--colorText: white;
}
.orange {
	--color: var(--orange);
	--colorText: white;
}
.indigo {
	--color: var(--indigo);
	--colorText: white;
}




 .setup-pannel.main-container {
  		width: 500px;
		height: 450px;
 }
@media (min-width: 768px) { 
 .setup-pannel.main-container {
  		width: 600px;
		height: 550px;
 }
}

@media (min-width: 992px) { 

h3 {
	font-size: 25px;
 }
 body {
 	font-size: 14px;
 }
 .setup-pannel.main-container {
 		width: 600px;
		height: 550px;
 }
}

@media (min-width: 1200px) { 
h3 {
	font-size: 1.75em;
}
 body {
 	font-size: 1em;
 }
 .setup-pannel.main-container {
 		width: 600px;
		height: 550px;
 }
}
@media (min-width: 1400px) { 
 .setup-pannel.main-container {
 		width: 600px;
		height: 550px;
 }
}
@media (min-width: 1450px) { 
 .setup-pannel.main-container {
 		width: 600px;
		height: 550px;
 }
}
@media (min-width: 1500px) { 
 .setup-pannel.main-container {
 		width: 600px;
		height: 550px;
 }
}
@media (min-width: 1800px) { 
 .setup-pannel.main-container {
 		width: 600px;
		height: 550px;
 }
}

.color-bg {
	background: var(--color);
	color: var(--colorText);
}
.color-text {
	color: var(--color);
}

body {
	background: var(--main-bg);
}
body.grouped {
	background: var(--main-bg-group);
}

.card {
	border-radius: 20px;
	background: var(--secondary-bg);
	border: 0;
}
.card.grouped {
	background: var(--secondary-bg-group);
}
.main-bg {
	background: var(--main-bg);
}
.main-bg.grouped {
	background: var(--main-bg-group);
}
.secondary-bg {
	background: var(--secondary-bg);
}
.secondary-bg.grouped {
	background: var(--secondary-bg-group);
}
.card-lg {
	padding: 30px;
}
.card-md {
	padding: 15px;
}
.card-sm {
	padding: 10px;
	border-radius: 13px;
}
.card.card-sm.selected {
	transition: border 0s;
	border: 2px solid var(--color);
}
h1, h2, h3, h4, h5, h6 {
	color: var(--main-label);
}
p, span {
	color:  var(--secondary-label);
	line-height: 1.4;
}
.lh0 {
	line-height: 0;
}
b {
}

.tooltip .arrow {
	display: none;
}
.tooltip .tooltip-inner {
	color: var(--main-label);
	background: var(--main-bg);
	border-radius: 10px !important;

}
.tooltip {
	background: var(--main-bg);
	border-radius: 10px !important;
	padding: 0;
	box-shadow: rgba(0, 0, 0, 0.3) 0px 0px 30px -4px;
}
.bs-tooltip-top {
	top: -5px !important;
}
.graph-bar {
	transition: all .4s ease;
}
.graph-bar.hide {
	height: 0 !important;
}
.graph-bar-hr {
	transition: all .4s ease;
}
.graph-bar-hr.hide {
	width: 0 !important;
}

/* width */
::-webkit-scrollbar {
  width: 3px;
}

/* Track */
::-webkit-scrollbar-track {
  background: transparent; 
}
 
/* Handle */
::-webkit-scrollbar-thumb {
  background: var(--secondary-label); 
  border-radius: 100px;
}

/* Handle on hover */
::-webkit-scrollbar-thumb:hover {
  background: #555; 
}
hr {
    margin-top: 1rem;
    margin-bottom: 1rem;
    border: 0;
    border-top: 1px solid var(--separator);
}
.hover {
	transition: all .4s;
}
.hover:hover {
	background: var(--fill-grey-1);
	cursor: pointer;
}
.card.hover:hover {
	background: var(--fill-grey-1);
	cursor: pointer;
}


.modal-content {
    position: relative;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-direction: column;
    flex-direction: column;
    width: 100%;
    pointer-events: auto;
    background-clip: padding-box;
    border: none;
    border-radius: 0.3rem;
    outline: 0;
}
.modal-content {
	transition: all .3s;
	box-shadow: rgb(0 0 0 / 65%) 0px 0px 30px -10px;
}
.modal-header, .modal-body, .modal-footer {
	transition: all .3s;
	border: none;
}
.modal-header {
	padding-bottom: 5px;
}
.modal .secondary-details {
	transition: all .3s;
	position: absolute; 
	width: 100%; 
	left: 50%; 
	top: 35px; 
	z-index: 9999; 
	//padding: 1rem; 
	background: var(--main-bg); 
	box-shadow: rgb(0 0 0 / 65%) 0px 0px 30px -10px;
 	border-radius: 15px; 
 	transform: translate(-50%, 100%); 
 	width: 550px;
 	overflow: hidden;
 	border: none;
}
.modal-resizable-content {
		transition: all .3s;
}
.modal.fade .modal-dialog {
    transform: translate(0, 50px);
}
.modal.show .modal-dialog {
    -webkit-transform: none;
    transform: none !important;
}
.button {
	border: 0;
	border-radius: 11px;
	padding: 5px 15px 5px 15px;
	transition: all .2s;
}
.button:focus {
	outline: none;
}
.button:hover {
	filter: brightness(75%);
	cursor: pointer;
}
.button.rounded {
	border-radius: 100px !important;
}
.button.circular {
	border-radius: 100px !important;
	padding: 5px;
	width: 35px;
	height: 35px;
	position: relative;
}
.button.circular i {
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
}
.button.primary-action {
	background: var(--color);
	color: var(--colorText);
}
.button.secondary-action {
	background: var(--fill-grey-1);
	color: var(--color);
}


.status-alert {
	  width: max-content;
    position: fixed;
    padding: 10px 10px 10px 10px;
    bottom: 0;
    transform: translate(-50%, 100%);
    left: 50%;
    background: var(--main-bg);
    border-radius: 100px;
		box-shadow: rgb(0 0 0 / 65%) 0px 0px 40px -15px;
		transition: all .4s;
		display: none;
		z-index: 999999;
}
.popup-alert-overlay {
	display: none;
	opacity: 0;
	transition: all .2s;
	position: fixed;
	width: 100%;
	height: 100%;
	top: 0;
	left: 0;
	background: rgb(0, 0, 0, 0.5);
	z-index: 9999;
}
.popup-alert.md {
	width: 350px;
}
.popup-alert {
	transition: all .2s;
	padding: 15px;
	border-radius: 15px;
	background: var(--main-bg-semi2);
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%) scale(0);
  backdrop-filter: blur(30px);
 	box-shadow: rgb(0 0 0 / 45%) 0px 0px 30px -10px;
}


.c {
  position: fixed;
  width: 10px;
  height: 10px;
  border-radius: 50%;
  background: red;
}

.y {
  animation-delay: -0.015s;
  background: #d4ff00;
  background: radial-gradient(circle at top left, rgba(52, 199, 89, 1), rgba(52, 199, 89, 1));
  box-shadow: 0 0 100px 30px rgba(52, 199, 89, 1);
  border: 1px solid rgba(52, 199, 89, 1);
}

.x {
  animation-delay: -0.03s;
  background: #d4ff00;
  background: radial-gradient(circle at top left, rgba(0, 122, 255, 1), rgba(0, 122, 255, 1));
  box-shadow: 0 0 100px 30px rgba(0, 122, 255, 1);
  border: 1px solid rgba(0, 122, 255, 1);
}
.p10 {
	padding-left:  10px;
	padding-right: 10px;
}
.p5 {
	padding-left:  5px;
	padding-right: 5px;
}

.circle-numb {
   border-radius: 50%;
   display: block;
   line-height: 40px;
   text-align: center;
   width: 40px;
}



span#procent {
  display: block;
  position: absolute;
  left: 50%;
  top: 50%;
  font-size: 25px;
  transform: translate(-50%, -50%);
  color: var(--main-label);
}

span#procent::after {
  content: '%';
}

.canvas-wrap {
  position: relative;
  width: 100px;
  height: 100px;
}
.main-container {
	opacity: 0;
	transition: opacity .4s;
}
input[type="text"] {
	background: var(--fill-grey-1);
  border: none;
  border-radius: 8px;
  font-size: 15px;
 	padding: 3;
  padding: 3px 10px 3px 10px;
  outline: none !important;
  border: 2px solid transparent;
  color: var(--main-label);
  transition: all .2s;
  width: auto;
}
.input-group {
	width: unset;
}

.input-group input[type="text"] {
	padding-left: 35px;
	width: 100%;
}
.input-group i {
	position: absolute;
	top: 50%;
	transform: translateY(-50%);
	left: 10px;
}
input[type="text"]:focus {
	background: var(--separator);
  border: 2px solid var(--color);
}




/* Customize the label (the container) */
.checkbox-container, .radio-container, .switch-container {
  display: block;
  position: relative;
  margin-bottom: 0px;
  cursor: pointer;
}


/* Hide the browser's default checkbox */
.checkbox-container input[type="checkbox"], .radio-container input[type="radio"], .switch-container input[type="checkbox"] {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}


/* Create a custom checkbox */
.checkbox-container .checkmark {
	display: block;
	position: relative;
  height: 25px;
  width: 25px;
  background-color: var(--fill-grey-1);
  border-radius: 6px;
  border: 2px solid var(--fill-grey-1);
  transition: all .2s;
}
.radio-container .checkmark {
	display: block;
	position: relative;
  height: 25px;
  width: 25px;
  background-color: var(--fill-grey-1);
  border-radius: 100px;
  border: 2px solid var(--fill-grey-1);
  transition: all .2s;
}
.switch-container .checkmark {
	display: block;
	position: relative;
  height: 25px;
  width: 50px;
  background-color: var(--fill-grey-1);
  border-radius: 100px;
  transition: all .2s;
}


/* On mouse-over, add a grey background color */
.checkbox-container:hover input[type="checkbox"] ~ .checkmark, .radio-container:hover input[type="radio"] ~ .checkmark, .switch-container:hover input[type="checkbox"] ~ .checkmark {
  background-color: var(--color);
	opacity: 0.3;
	transform: scale(1.1);
}
.checkbox-container:hover input[type="checkbox"]:checked  ~ .checkmark, .radio-container:hover input[type="radio"]:checked  ~ .checkmark, .switch-container:hover input[type="checkbox"]:checked  ~ .checkmark {
  background-color: var(--color);
	opacity: 1;
	transform: scale(1.1);
}

/* When the checkbox is checked, add a blue background */
.checkbox-container input[type="checkbox"]:checked ~ .checkmark, .radio-container input[type="radio"]:checked ~ .checkmark, .switch-container input[type="checkbox"]:checked ~ .checkmark {
	background-color: var(--color);
  border: none;
}


/* Create the checkmark/indicator (hidden when not checked) */
.checkmark:after {
  content: "";
  position: absolute;
  display: none;
}

/* Show the checkmark when checked */
.checkbox-container input[type="checkbox"]:checked ~ .checkmark:after, .radio-container input[type="radio"]:checked ~ .checkmark:after {
  display: block;
}
.switch-container input[type="checkbox"]:checked ~ .checkmark:after {
   transform: translateX(28px);
}


/* Style the checkmark/indicator */
.checkbox-container .checkmark:after {
		transition: all .2s;
    left: 9px;
    top: 5px;
    width: 7px;
    height: 13px;
    border: solid white;
    border-width: 0 2px 2px 0;
    -ms-transform: rotate(45deg);
    transform: rotate(
45deg
);
}
.radio-container .checkmark:after {
    left: 9px;
    top: 5px;
    width: 7px;
    height: 13px;
    border: solid white;
    border-width: 0 2px 2px 0;
    -ms-transform: rotate(45deg);
    transform: rotate(
45deg
);
}
.switch-container .checkmark:after {
    top: 3px;
    transform: translateX(2px);
    width: 19px;
    height: 19px;
    background: white;
    border-radius: 100px;
    box-shadow: rgb(0 0 0 / 20%) 0px 0px 20px 0px;
    display: block;
    transition: all .2s;
}




select {
	background: var(--fill-grey-1);
	border-radius: 7px;
	border: none;
	padding: 3px;
	color: var(--main-label);
	transition: all .2s;
	font-size: 14px;
}
select:hover {
	cursor: pointer;
	filter: brightness(80%);
}

.hr-icon-label {
	display: flex;
	margin-bottom: 15px;
	align-items: center;
	transition: all .4s;
	border-radius: 10px;
	padding: 5px;
  width: inherit;
  column-gap: 10px;
}
a.hr-icon-label:hover {
	transform: scale(1.1);
	background: var(--secondary-bg-group);
	cursor: pointer;
	text-decoration: none;
  box-shadow: 0 0 20px -10px rgba(0, 0, 0, 0.5);
}

.hr-icon-label .label-icon {
	height: 30px;
	width: 30px;
	border-radius: 7px;
	position: relative;
}
.hr-icon-label .label-icon i {
	position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}
.hr-icon-label .label-content {
  overflow-wrap: break-word;
  max-width: calc(100% - 40px);
}
.hr-icon-label .label-content .label-title {
  display: block;
  font-size: 11px;
  line-height: 1;
  margin-bottom: 3px;
  text-transform: uppercase;
}
.hr-icon-label .label-content .label-value {
  font-size: 13px;
  display: block;
  line-height: 1;
  color: var(--main-label);
}


.icon-bg {
	height: 25px;
   width: 25px;
   border-radius: 6px;
   position: relative;
}
.icon-bg i {
	position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  color: white;
  font-size: 13px;
}
.badge {
	font-size: 12px;
	color: var(--blue);
	padding: 5px 8px;
	background: var(--fill-grey-1);
	border-radius: 20px;
	font-weight: unset;
}

.setup-overlay {
	background: var(--secondary-bg);
  opacity: 1;
  backdrop-filter: blur(20px);
  position: fixed;
  height: 100%;
  width: 100%;
  top: 0;
  left: 0;
  z-index: 999;
}
.setup-pannel {
	border-radius: 25px;
	box-shadow: rgb(0 0 0 / 35%) 0px 0px 30px -10px;
	position: relative;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
	overflow: hidden;
}
.setup-pannel .setup-body {
    height: 100%;
    overflow-y: scroll;
    padding-bottom: 40px;
    margin: auto;
    position: relative;
    overflow-x: hidden;
}
.setup-pannel .setup-body .setup-step {
	padding: 20px 50px 20px 50px;
  padding-bottom: 69px;
  height: min-content;
  position: fixed;
  transition: all .4s;
  transform:  translate(100%, 0);
  background: var(--main-bg);
  width: 100%;
  min-height: 100%;
}
.setup-pannel .setup-body .setup-step .step-content-wrapper {
	width: 100%;
}
.setup-pannel .setup-body .setup-step.active {
  transform: translate(0, 0);
  position: absolute;
}
.setup-pannel .setup-footer {
	width: 100%;
	position: absolute;
	bottom: 0;
	left: 0;
	padding: 15px;
	z-index: 999;
}
.blurry-bg {
	background: var(--main-bg-semi);
	backdrop-filter: blur(20px);
}


.button:disabled {
	opacity: 0.4;
}
.card-md.card.main-bg.grouped.hPage {
	max-height: 500px;
}
.card-md.card.main-bg.grouped.hModal {
	max-height: 400px;
}

.socialBtn {
	margin-right: 10px; 
	display: flex; 
	background: var(--secondary-bg-group); 
	border-radius: 9px; 
	width: 35px; 
	height: 35px; 
	position: relative;
	transition: all .4s;
}
.socialBtn:hover {
	transform: scale(1.1);
	cursor: pointer;
	text-decoration: none;
  box-shadow: 0 0 20px -5px rgba(0, 0, 0, 0.5);
}
.tabs {
	background: var(--fill-grey-1);
	border-radius: 12px;
  width: max-content;
  padding: 3px;
}
.tab {
	padding: 3px 12px;
	border-radius: 10px;
	display: inline-block;
	color: var(--secondary-label);
	transition: all .3s;
}
.tab:hover {
	color: var(--main-label);
  cursor: pointer;
  transform: scale(1.05);
}


.tab.selected {
	background: var(--fill-grey-3);
	color: var(--main-label);
  box-shadow: 0 0 20px -5px rgba(0, 0, 0, 0.3);
}
